var searchData=
[
  ['tobreakpoints_0',['tobreakpoints',['../class__core_1_1Basis.html#abb16acce833a7c34886b7ec3b6416f34',1,'_core.Basis.toBreakpoints()'],['../classBasisSplines_1_1Basis.html#a89eba517d75461086381b8df9ddb39f4',1,'BasisSplines::Basis::toBreakpoints()']]],
  ['toknots_1',['toknots',['../class__core_1_1Basis.html#a4eb4f45d8a1518d8d9f9ce2fd843c551',1,'_core.Basis.toKnots(typing.Annotated[numpy.typing.ArrayLike, numpy.float64, &quot;[m, 1]&quot;] breakpoints, typing.Annotated[numpy.typing.ArrayLike, numpy.int32, &quot;[m, 1]&quot;] continuities, typing.SupportsInt order)'],['../class__core_1_1Basis.html#ac4178848a42305b3e5d1f306d2a1db57',1,'_core.Basis.toKnots(tuple[typing.Annotated[numpy.typing.ArrayLike, numpy.float64, &quot;[m, 1]&quot;], typing.Annotated[numpy.typing.ArrayLike, numpy.int32, &quot;[m, 1]&quot;]] breakpoints, typing.SupportsInt order)'],['../classBasisSplines_1_1Basis.html#aa3ccaa04afe788dbd6a2a55b9186dc2d',1,'BasisSplines::Basis::toKnots(const Eigen::ArrayXd &amp;breakpoints, const Eigen::ArrayXi &amp;continuities, int order)'],['../classBasisSplines_1_1Basis.html#a42e1115109be8a6f8805ba9b4adb4ddf',1,'BasisSplines::Basis::toKnots(const std::pair&lt; Eigen::ArrayXd, Eigen::ArrayXi &gt; &amp;breakpoints, int order)']]]
];
